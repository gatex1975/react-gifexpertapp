{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAgB,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAG7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAbW,SAAEC,GACnBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAe,MAMnB,SACG,uBACGO,KAAK,OACLC,MAAUT,EAEVU,SAvBgB,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,a,+BCVnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEqCC,UAAWH,GAFhD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeXM,GAfW,4CAAH,sDCAPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAQf,EAAMgB,IAAQN,IAC3B,4BAAKA,QCDJO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAItB,CAAEpB,IAEEqB,EDlB0BI,CAAczB,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,0CAAd,SAA0DhB,IAUxDoB,GAAW,mBAAGJ,UAAW,mCAAd,wBAEb,qBAAKA,UAAY,YAAjB,SAEYH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADGA,EAAIC,aEvB/Be,EAAe,WAGxB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAcA,OACI,qCACI,8CACA,cAAC,EAAD,CAAeA,cAAkBA,IACjC,uBAMA,6BAEQ0C,EAAWlB,KAAK,SAAET,GAAF,OAEA,aADA,CACC,EAAD,CAEIA,SAAaA,GADLA,Y,MC/BhD4B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.191c8275.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategories = ( { setCategories } ) => {\r\n\r\n    //const [inputValue, setInputValue] = useState('Hola Mundo');\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        //console.log(e.target.value);\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        //console.log('Submit hecho');\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            //setCategories( cat => [ ...cat, inputValue ] );\r\n            setCategories( cat => [ inputValue, ...cat ] );\r\n            setInputValue( '' );\r\n        }    \r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n           <input \r\n              type=\"text\" \r\n              value = { inputValue } \r\n              //onChange = { ( e ) =>  console.log( e ) }/>\r\n              onChange = { handleInputChange } \r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => { \r\n    \r\n    const url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=C1kOSCQ2k0DXHUimR4teE2WigNXkife9`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return  gifs ;\r\n}\r\n","import React from 'react'\r\nexport const GifGridItem = ( { id, title, url } ) => {   \r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__bounce\" >\r\n            <img src = { url } alt = { title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) =>{\r\n\r\n    const { data:images, loading } = useFetchGifs( category );  // =>> este es un custom hook\r\n        \r\n    return(\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceInDown\">{ category }</h3>\r\n            \r\n            { \r\n            \r\n              /* Aqu√≠ se esta haciendo un if  es igual a decir \r\n                 loading ? <p className =\"animate__animated animate__flash\">Loading...</p> :  null\r\n                 ABAJO\r\n              */ \r\n\r\n            }\r\n            { loading && <p className =\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className = \"card-grid\">\r\n                    { \r\n                        images.map( ( img ) => (\r\n                            <GifGridItem \r\n                                key = { img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then( img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });                        \r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    return state; //{ data:[] loading: true}     \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategories } from './components/AddCategories';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /*\r\n    const handleAdd = () => {\r\n            //Agregar al final\r\n            //setCategories([...categories, 'HunterXHunter']); \r\n\r\n            //Agregar al inicio\r\n            //setCategories(['HunterXHunter',...categories]); \r\n\r\n            //Otra manera de modificar el state\r\n            setCategories( cat => [...cat, 'HunterXHunter'] );\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategories setCategories = { setCategories } />\r\n            <hr />\r\n\r\n            { \r\n            //<button onClick={ handleAdd }>Agregar</button> \r\n            }\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( ( category ) =>                                     \r\n                                    /*<li key={ category }>{ category }</li>*/    \r\n                                    <GifGrid \r\n                                        key = { category } \r\n                                        category = { category }\r\n                                    />\r\n                                  )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n  \n);\n\n"],"sourceRoot":""}